{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React, { Fragment, useEffect } from 'react';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, { ButtonControlWrapper, ButtonWrapper, BulletControlWrapper, BulletButton, DefaultBtn } from './glide.style';\n\nvar GlideCarousel = function GlideCarousel(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      options = _ref.options,\n      controls = _ref.controls,\n      prevButton = _ref.prevButton,\n      nextButton = _ref.nextButton,\n      prevWrapper = _ref.prevWrapper,\n      nextWrapper = _ref.nextWrapper,\n      bullets = _ref.bullets,\n      numberOfBullets = _ref.numberOfBullets,\n      buttonWrapperStyle = _ref.buttonWrapperStyle,\n      bulletWrapperStyle = _ref.bulletWrapperStyle,\n      bulletButtonStyle = _ref.bulletButtonStyle,\n      carouselSelector = _ref.carouselSelector;\n  // Add all classs to an array\n  var addAllClasses = ['glide']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // number of bullets loop\n\n\n  var totalBullets = [];\n\n  for (var i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  } // Load glide\n\n\n  useEffect(function () {\n    var glide = new Glide(carouselSelector ? \"#\".concat(carouselSelector) : '#glide', _objectSpread({}, options));\n    glide.mount();\n  });\n  return React.createElement(GlideWrapper, {\n    className: addAllClasses.join(' '),\n    id: carouselSelector || 'glide'\n  }, React.createElement(\"div\", {\n    className: \"glide__track\",\n    \"data-glide-el\": \"track\"\n  }, React.createElement(\"ul\", {\n    className: \"glide__slides\"\n  }, children)), controls && React.createElement(ButtonControlWrapper, _extends({\n    className: \"glide__controls\",\n    \"data-glide-el\": \"controls\"\n  }, buttonWrapperStyle), React.createElement(ButtonWrapper, _extends({}, prevWrapper, {\n    className: \"glide__prev--area\",\n    \"data-glide-dir\": \"<\",\n    \"aria-label\": \"prev\"\n  }), prevButton ? prevButton : React.createElement(DefaultBtn, null, \"Prev\")), React.createElement(ButtonWrapper, _extends({}, nextWrapper, {\n    className: \"glide__next--area\",\n    \"data-glide-dir\": \">\",\n    \"aria-label\": \"next\"\n  }), nextButton ? nextButton : React.createElement(DefaultBtn, null, \"Next\"))), bullets && React.createElement(BulletControlWrapper, _extends({\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\"\n  }, bulletWrapperStyle), React.createElement(Fragment, null, totalBullets.map(function (index) {\n    return React.createElement(BulletButton, _extends({\n      key: index,\n      className: \"glide__bullet\",\n      \"data-glide-dir\": \"=\".concat(index),\n      \"aria-label\": \"bullet\".concat(index + 1)\n    }, bulletButtonStyle));\n  }))));\n};\n\n// GlideCarousel default props\nGlideCarousel.defaultProps = {\n  controls: true,\n  bullets: false\n};\nexport default GlideCarousel;","map":null,"metadata":{},"sourceType":"module"}