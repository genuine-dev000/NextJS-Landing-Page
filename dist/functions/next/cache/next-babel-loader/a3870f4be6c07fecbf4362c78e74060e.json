{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from 'react';\nimport { Icon } from 'react-icons-kit';\nimport Box from 'reusecore/src/elements/Box';\nimport Text from 'reusecore/src/elements/Text';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Image from 'reusecore/src/elements/Image';\nimport Button from 'reusecore/src/elements/Button';\nimport Container from 'common/src/components/UI/Container';\nimport { plus } from 'react-icons-kit/feather/plus';\nimport { ButtonWrapper } from '../../Portfolio/portfolio.style';\nimport ProcessItem from './process.style';\nimport { PROCESS_STEPS, SERVICE_LIST } from 'common/src/data/Portfolio/data';\n\nvar ProcessSection = function ProcessSection(_ref) {\n  var sectionWrapper = _ref.sectionWrapper,\n      secTitleWrapper = _ref.secTitleWrapper,\n      secTitle = _ref.secTitle,\n      secDescription = _ref.secDescription,\n      processRow = _ref.processRow,\n      processCol = _ref.processCol,\n      processImageStyle = _ref.processImageStyle,\n      processTitleStyle = _ref.processTitleStyle,\n      processDescriptionStyle = _ref.processDescriptionStyle,\n      learningRow = _ref.learningRow,\n      learningContentArea = _ref.learningContentArea,\n      learningListArea = _ref.learningListArea,\n      learningTitle = _ref.learningTitle,\n      learningSubTitle = _ref.learningSubTitle,\n      learningDescription = _ref.learningDescription,\n      buttonWrapper = _ref.buttonWrapper,\n      buttonLabelStyle = _ref.buttonLabelStyle,\n      buttonStyle = _ref.buttonStyle,\n      learningList = _ref.learningList,\n      listItem = _ref.listItem,\n      listText = _ref.listText,\n      listTitle = _ref.listTitle;\n  return React.createElement(Box, _extends({}, sectionWrapper, {\n    as: \"section\",\n    id: \"process_section\"\n  }), React.createElement(Container, {\n    noGutter: true,\n    mobileGutter: true,\n    width: \"1200px\"\n  }, React.createElement(Box, secTitleWrapper, React.createElement(Heading, _extends({}, secTitle, {\n    content: \"From Lean Design Sprints to Agile Development\"\n  })), React.createElement(Text, _extends({}, secDescription, {\n    content: \"Our process is designed to give you the best shot at success.\"\n  }))), React.createElement(Box, processRow, PROCESS_STEPS.map(function (item, index) {\n    return React.createElement(Box, _extends({}, processCol, {\n      key: \"process-item-\".concat(index),\n      className: \"process_item_col\"\n    }), React.createElement(ProcessItem, {\n      className: \"process_item\"\n    }, React.createElement(Image, _extends({\n      src: item.image,\n      alt: \"process-image-\".concat(index + 1)\n    }, processImageStyle)), React.createElement(Heading, _extends({\n      as: \"h3\",\n      content: item.title\n    }, processTitleStyle)), React.createElement(Text, _extends({\n      content: item.description\n    }, processDescriptionStyle))));\n  })), React.createElement(Box, learningRow, React.createElement(Box, learningContentArea, React.createElement(Heading, _extends({\n    content: \"Which is why we Never Stop Learning.\"\n  }, learningTitle)), React.createElement(Text, _extends({\n    content: \"We believe that we succeed when our clients succeed.\"\n  }, learningSubTitle)), React.createElement(Text, _extends({}, learningDescription, {\n    content: \"I\\u2019m Tom Parkes, a New Zealand born digital designer currently looking for opportunities in Canada. Over the 8 years of my career, my portfolio includes user interface design, brand & identity design, illustration, and art & creative direction.\"\n  })), React.createElement(Text, _extends({}, learningDescription, {\n    content: \"While at Neverbland over the last few years, I've worked on web and product solutions for a range of startups, in a variety of industries.\"\n  })), React.createElement(Box, buttonWrapper, React.createElement(Text, _extends({\n    content: \"Start Your Project ?\"\n  }, buttonLabelStyle)), React.createElement(ButtonWrapper, null, React.createElement(Button, _extends({\n    title: \"hello@danielkorpai.com\",\n    className: \"portfolio_button\"\n  }, buttonStyle))))), React.createElement(Box, learningListArea, SERVICE_LIST.map(function (serviceList, index) {\n    return React.createElement(Box, _extends({}, learningList, {\n      key: \"serviceList-\".concat(index)\n    }), React.createElement(Heading, _extends({\n      content: serviceList.title\n    }, listTitle)), serviceList.listItems.map(function (item, index) {\n      return React.createElement(Box, _extends({}, listItem, {\n        key: \"list-item-\".concat(index)\n      }), React.createElement(Icon, {\n        icon: item.icon || plus,\n        size: item.iconSize || 12\n      }), React.createElement(Text, _extends({\n        as: \"span\",\n        content: item.content\n      }, listText)));\n    }));\n  })))));\n};\n\nProcessSection.defaultProps = {\n  sectionWrapper: {\n    pt: ['60px', '80px', '90px', '100px', '140px'],\n    pb: ['10px', '40px', '30px', '50px', '50px']\n  },\n  secTitleWrapper: {\n    mb: ['60px', '105px']\n  },\n  secTitle: {\n    fontSize: ['22px', '26px', '26px', '30px', '30px'],\n    fontWeight: '700',\n    color: '#302b4e',\n    lineHeight: '1.34',\n    mb: ['15px', '18px', '18px', '20px', '20px'],\n    textAlign: 'center'\n  },\n  secDescription: {\n    fontSize: ['15px', '16px'],\n    fontWeight: '400',\n    color: '#43414e',\n    lineHeight: '1.5',\n    mb: '0',\n    textAlign: 'center'\n  },\n  processRow: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    ml: ['0', '-15px', '-30px', '-70px', '-70px'],\n    mr: ['0', '-15px', '-30px', '-70px', '-70px']\n  },\n  processCol: {\n    width: [1, 1 / 3],\n    pl: ['0', '15px', '30px', '70px', '70px'],\n    pr: ['0', '15px', '30px', '70px', '70px'],\n    mb: '40px'\n  },\n  processImageStyle: {\n    ml: 'auto',\n    mr: 'auto',\n    mb: '35px'\n  },\n  processTitleStyle: {\n    fontSize: ['20px', '18px', '20px', '20px', '20px'],\n    fontWeight: '600',\n    color: '#302b4e',\n    textAlign: 'center',\n    mb: ['20px', '20px', '27px', '27px', '27px']\n  },\n  processDescriptionStyle: {\n    fontSize: ['15px', '15px', '16px', '16px'],\n    fontWeight: '400',\n    color: '#43414e',\n    textAlign: 'center',\n    lineHeight: '1.5'\n  },\n  learningRow: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mt: ['20px', '30px', '70px', '80px', '110px']\n  },\n  learningContentArea: {\n    width: ['100%', '100%', '50%', '50%', '50%'],\n    pr: ['0px', '0px', '60px', '80px', '160px'],\n    mb: ['70px', '70px', '0', '0', '0']\n  },\n  learningTitle: {\n    fontSize: ['22px', '22px', '24px', '30px', '30px'],\n    fontWeight: '700',\n    color: '#302b4e',\n    lineHeight: '1.34',\n    mb: ['20px', '20px', '15px', '20px', '20px'],\n    pr: ['0', '0', '0', '65px', '65px']\n  },\n  learningSubTitle: {\n    fontSize: ['16px', '16px', '18px', '20px', '20px'],\n    fontWeight: '400',\n    color: '#43414e',\n    lineHeight: '1.5',\n    mb: '20px',\n    pr: ['0', '0', '0', '65px', '65px']\n  },\n  learningDescription: {\n    fontSize: '16px',\n    color: '#43414e',\n    lineHeight: '1.5',\n    mb: '25px'\n  },\n  buttonWrapper: {\n    flexBox: true,\n    alignItems: 'center',\n    mt: ['30px', '40px', '40px', '80px', '80px'],\n    flexWrap: ['wrap']\n  },\n  buttonLabelStyle: {\n    fontSize: '16px',\n    fontWeight: '500',\n    color: '#3444f1',\n    mb: ['20px', '20px', '20px', '0', '0'],\n    mr: '30px',\n    width: ['100%', '100%', '100%', 'auto', 'auto']\n  },\n  buttonStyle: {\n    type: 'button',\n    fontSize: '16px',\n    fontWeight: '500',\n    color: '#fff',\n    pl: '23px',\n    pr: '23px'\n  },\n  learningListArea: {\n    width: ['100%', '100%', '50%', '50%', '50%'],\n    flexBox: true,\n    flexWrap: 'wrap'\n  },\n  learningList: {\n    width: ['100%', '33.3333333%', '50%', '50%', '50%'],\n    pl: ['0', '0', '35px', '35px', '35x'],\n    pr: ['0', '30px', '0', '0', '0'],\n    mb: ['40px', '40px', '60px', '80px', '90px']\n  },\n  listTitle: {\n    fontSize: '20px',\n    fontWeight: '600',\n    color: '#302b4e',\n    mb: '25px'\n  },\n  listItem: {\n    flexBox: true,\n    alignItems: 'center',\n    color: '#43414e',\n    mb: '16px'\n  },\n  listText: {\n    fontSize: '16px',\n    fontWeight: '400',\n    color: '#43414e',\n    mb: '0',\n    ml: '5px'\n  }\n};\nexport default ProcessSection;","map":null,"metadata":{},"sourceType":"module"}