{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from 'react';\nimport Link from 'next/link';\nimport Countdown from 'react-countdown-now';\nimport Box from 'reusecore/src/elements/Box';\nimport Fade from 'react-reveal/Fade';\nimport Card from 'reusecore/src/elements/Card';\nimport Image from 'reusecore/src/elements/Image';\nimport Text from 'reusecore/src/elements/Text';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport FeatureBlock from 'common/src/components/FeatureBlock';\nimport Container from 'common/src/components/UI/Container';\nimport { ControlWrapper } from './controlSection.style';\nimport ControlImage from 'common/src/assets/image/crypto/control.jpg';\n\nvar Completionist = function Completionist() {\n  return React.createElement(\"span\", {\n    className: \"readMore\"\n  }, \"You are good to go!\");\n};\n\nvar renderer = function renderer(_ref) {\n  var days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds,\n      completed = _ref.completed;\n\n  if (completed) {\n    // Render a complete state\n    return React.createElement(Completionist, null);\n  } else {\n    // Render a countdown\n    return React.createElement(\"div\", {\n      className: \"countPortion\"\n    }, React.createElement(\"div\", {\n      className: \"countSingle\"\n    }, days, \" \", React.createElement(\"span\", {\n      className: \"countText\"\n    }, \"Days\")), React.createElement(\"div\", {\n      className: \"countSingle\"\n    }, hours, \" \", React.createElement(\"span\", {\n      className: \"countText\"\n    }, \"Hours\")), React.createElement(\"div\", {\n      className: \"countSingle\"\n    }, minutes, \" \", React.createElement(\"span\", {\n      className: \"countText\"\n    }, \"Minutes\")), React.createElement(\"div\", {\n      className: \"countSingle\"\n    }, seconds, \" \", React.createElement(\"span\", {\n      className: \"countText\"\n    }, \"Seconds\")));\n  }\n};\n\nvar ControlSection = function ControlSection(_ref2) {\n  var row = _ref2.row,\n      col = _ref2.col,\n      title = _ref2.title,\n      description = _ref2.description,\n      btnStyle = _ref2.btnStyle,\n      sectionSubTitle = _ref2.sectionSubTitle,\n      cardArea = _ref2.cardArea,\n      readMoreTitle = _ref2.readMoreTitle;\n  return React.createElement(ControlWrapper, {\n    id: \"control\"\n  }, React.createElement(Container, null, React.createElement(Box, _extends({\n    className: \"row\"\n  }, row), React.createElement(Box, _extends({\n    className: \"colleft\"\n  }, col, {\n    style: {\n      flexDirection: 'column'\n    }\n  }), React.createElement(Image, {\n    src: ControlImage,\n    className: \"controlImage\",\n    alt: \"Control Section Image\"\n  })), React.createElement(Box, _extends({\n    className: \"colright\"\n  }, col, cardArea), React.createElement(Text, sectionSubTitle), React.createElement(FeatureBlock, {\n    title: React.createElement(Heading, title),\n    description: React.createElement(Text, description)\n  }), React.createElement(Box, {\n    className: \"readMoreSection\"\n  }, React.createElement(Text, readMoreTitle), React.createElement(Link, {\n    href: \"#\"\n  }, React.createElement(\"a\", {\n    className: \"readMore\"\n  }, \"Read More. \"))), React.createElement(Fade, {\n    up: true\n  }, React.createElement(Box, {\n    className: \"countDownSection\"\n  }, React.createElement(Countdown, {\n    date: _Date$now() + 909999999,\n    renderer: renderer,\n    completed: false\n  }))), React.createElement(Box, {\n    className: \"countDownButton\"\n  }, React.createElement(Button, _extends({\n    title: \"BUY TOKENS\",\n    className: \"countDownMainButton\"\n  }, btnStyle)), React.createElement(Button, _extends({\n    title: \"35% Bonus\",\n    className: \"countDownDiscountButton\"\n  }, btnStyle)))))));\n}; // Transactions style props\n\n\n// Transactions default style\nControlSection.defaultProps = {\n  // Transactions section row default style\n  row: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    ml: '-15px',\n    mr: '-15px'\n  },\n  // Transactions section col default style\n  col: {\n    pr: '15px',\n    pl: '15px',\n    width: [1, 1 / 2, 1 / 2, 1 / 2, 1 / 2],\n    flexBox: true,\n    alignSelf: 'center'\n  },\n  // Transactions section title default style\n  title: {\n    content: 'Take control of your credit and identity.',\n    fontSize: ['24px', '26px', '30px', '36px', '40px'],\n    lineHeight: ['30px', '32px', '40px', '50px', '55px'],\n    fontWeight: '700',\n    color: '#32325d',\n    letterSpacing: '-0.010em',\n    mb: '20px',\n    maxWidth: ['100%', '100%', '100%', '100%', '415px'],\n    textAlign: ['left', 'left']\n  },\n  // Transactions section description default style\n  description: {\n    content: 'Crumbs makes crypto investing effortless and automated, so now you would not miss the right time to buy. From the customer wallet to the marchent wallet in a few minute.',\n    fontSize: '16px',\n    fontWeight: '400',\n    color: '#525f7f',\n    lineHeight: '28px',\n    mb: ['30px', '30px', '35px', '35px', '45px'],\n    textAlign: ['left', 'left'],\n    maxWidth: ['100%', '100%', '100%', '100%', '430px']\n  },\n  sectionSubTitle: _defineProperty({\n    content: 'Effortless crypto for everyone.',\n    as: 'span',\n    textAlign: 'left',\n    fontSize: ['16px', '16px', '18px', '20px', '20px'],\n    fontFamily: 'Poppins',\n    fontWeight: '600',\n    lineHeight: '27px',\n    color: '#525f7f'\n  }, \"textAlign\", ['left', 'left']),\n  // Button default style\n  btnStyle: {\n    minWidth: '156px',\n    fontSize: '14px',\n    fontWeight: '500'\n  },\n  readMoreTitle: {\n    content: 'Sale currently on hold. ',\n    as: 'span',\n    fontSize: ['18px', '18px', '20px', '20px', '20px'],\n    lineHeight: ['25px', '27px', '27px', '27px', '27px'],\n    fontWeight: '500',\n    color: '#32325d',\n    letterSpacing: '-0.010em',\n    mb: '10px',\n    textAlign: ['left', 'left']\n  }\n};\nexport default ControlSection;","map":null,"metadata":{},"sourceType":"module"}