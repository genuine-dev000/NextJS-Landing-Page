{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Box from 'reusecore/src/elements/Box';\nimport Text from 'reusecore/src/elements/Text';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport Container from 'common/src/components/UI/Container';\nimport GlideCarousel from 'common/src/components/GlideCarousel';\nimport GlideSlide from 'common/src/components/GlideCarousel/glideSlide';\nimport { MONTHLY_PRICING_TABLE, YEARLY_PRICING_TABLE } from 'common/src/data/SaasClassic';\nimport PricingTable, { PricingHead, PricingPrice, PricingButton, PricingList, ListItem, PricingButtonWrapper, PricingTableWrapper } from './pricing.style';\n\nvar PricingSection = function PricingSection(_ref) {\n  var sectionWrapper = _ref.sectionWrapper,\n      secTitleWrapper = _ref.secTitleWrapper,\n      secHeading = _ref.secHeading,\n      secText = _ref.secText,\n      nameStyle = _ref.nameStyle,\n      descriptionStyle = _ref.descriptionStyle,\n      priceStyle = _ref.priceStyle,\n      priceLabelStyle = _ref.priceLabelStyle,\n      buttonFillStyle = _ref.buttonFillStyle,\n      listContentStyle = _ref.listContentStyle;\n\n  var _useState = useState({\n    data: MONTHLY_PRICING_TABLE,\n    active: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setLoading(true);\n    }, 500);\n  });\n  var data = state.data;\n  var activeStatus = state.active;\n  var pricingCarouselOptions = {\n    type: 'slider',\n    perView: 3,\n    gap: 30,\n    bound: true,\n    breakpoints: {\n      1199: {\n        perView: 2,\n        type: 'carousel',\n        peek: {\n          before: 100,\n          after: 100\n        }\n      },\n      990: {\n        type: 'carousel',\n        perView: 1,\n        peek: {\n          before: 160,\n          after: 160\n        }\n      },\n      767: {\n        type: 'carousel',\n        perView: 1,\n        peek: {\n          before: 80,\n          after: 80\n        }\n      },\n      575: {\n        type: 'carousel',\n        perView: 1,\n        gap: 15,\n        peek: {\n          before: 20,\n          after: 20\n        }\n      }\n    }\n  };\n  return React.createElement(Box, _extends({}, sectionWrapper, {\n    id: \"pricing_section\"\n  }), React.createElement(Container, null, React.createElement(Box, secTitleWrapper, React.createElement(Text, _extends({}, secText, {\n    content: \"PRICING PLAN\"\n  })), React.createElement(Heading, _extends({}, secHeading, {\n    content: \"Choose your pricing policy which affordable\"\n  })), React.createElement(PricingButtonWrapper, null, React.createElement(Button, {\n    title: \"Monthly Pricing\",\n    className: activeStatus ? 'active-item' : '',\n    onClick: function onClick() {\n      return setState({\n        data: MONTHLY_PRICING_TABLE,\n        active: true\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Annual Pricing\",\n    className: activeStatus === false ? 'active-item' : '',\n    onClick: function onClick() {\n      return setState({\n        data: YEARLY_PRICING_TABLE,\n        active: false\n      });\n    }\n  }), React.createElement(Link, {\n    href: \"#\"\n  }, React.createElement(\"a\", null, \"+ Custom Plan\")))), React.createElement(PricingTableWrapper, null, React.createElement(GlideCarousel, {\n    carouselSelector: \"pricing-carousel\",\n    options: pricingCarouselOptions,\n    controls: false\n  }, React.createElement(React.Fragment, null, data.map(function (pricingTable, index) {\n    return React.createElement(GlideSlide, {\n      key: \"pricing-table-\".concat(index)\n    }, React.createElement(PricingTable, {\n      freePlan: pricingTable.freePlan,\n      className: \"pricing_table\"\n    }, React.createElement(PricingHead, null, React.createElement(Heading, _extends({\n      content: pricingTable.name\n    }, nameStyle)), React.createElement(Text, _extends({\n      content: pricingTable.description\n    }, descriptionStyle))), React.createElement(PricingPrice, null, React.createElement(Text, _extends({\n      content: pricingTable.price\n    }, priceStyle)), React.createElement(Text, _extends({\n      content: pricingTable.priceLabel\n    }, priceLabelStyle))), React.createElement(PricingList, null, pricingTable.listItems.map(function (item, index) {\n      return React.createElement(ListItem, {\n        key: \"pricing-table-list-\".concat(index)\n      }, React.createElement(Text, _extends({\n        content: item.content\n      }, listContentStyle)));\n    })), React.createElement(PricingButton, null, React.createElement(Link, {\n      href: pricingTable.url\n    }, React.createElement(\"a\", null, React.createElement(Button, _extends({\n      title: pricingTable.buttonLabel\n    }, buttonFillStyle)))), pricingTable.trialButtonLabel ? React.createElement(Link, {\n      href: pricingTable.trialURL || '#'\n    }, React.createElement(\"a\", {\n      className: \"trial_button\"\n    }, pricingTable.trialButtonLabel)) : '')));\n  }))))));\n};\n\nPricingSection.defaultProps = {\n  sectionWrapper: {\n    as: 'section',\n    pt: ['60px', '80px', '80px', '80px', '100px'],\n    pb: '20px'\n  },\n  secTitleWrapper: {\n    mb: ['30px', '40px']\n  },\n  secText: {\n    as: 'span',\n    display: 'block',\n    textAlign: 'center',\n    fontSize: '14px',\n    letterSpacing: '0.15em',\n    fontWeight: '700',\n    color: '#ff4362',\n    mb: '12px'\n  },\n  secHeading: {\n    textAlign: 'center',\n    fontSize: ['20px', '24px', '36px', '36px'],\n    fontWeight: '700',\n    color: '#0f2137',\n    letterSpacing: '-0.025em',\n    mb: '0',\n    ml: 'auto',\n    mr: 'auto',\n    lineHeight: '1.12',\n    width: '500px',\n    maxWidth: '100%'\n  },\n  col: {\n    width: [1, 1 / 2, 1 / 2, 1 / 3],\n    pr: '15px',\n    pl: '15px'\n  },\n  nameStyle: {\n    fontSize: ['20px', '20px', '22px', '22px', '22px'],\n    fontWeight: '700',\n    color: '#0f2137',\n    letterSpacing: '-0.025em',\n    textAlign: 'center',\n    mb: '12px'\n  },\n  descriptionStyle: {\n    fontSize: ['15px', '16px', '16px', '16px', '16px'],\n    color: '#6e7379',\n    lineHeight: '1.75',\n    textAlign: 'center',\n    mb: '0'\n  },\n  priceStyle: {\n    as: 'span',\n    display: 'block',\n    fontSize: ['36px', '36px', '40px', '40px', '40px'],\n    color: '#0f2137',\n    textAlign: 'center',\n    mb: '5px',\n    letterSpacing: '-0.025em',\n    fontWeight: '500'\n  },\n  priceLabelStyle: {\n    fontSize: ['13px', '14px', '14px', '14px', '14px'],\n    color: '#6e7379',\n    lineHeight: '1.75',\n    textAlign: 'center',\n    mb: '0'\n  },\n  buttonStyle: {\n    type: 'button',\n    fontSize: '14px',\n    fontWeight: '600',\n    borderRadius: '4px',\n    pl: '10px',\n    pr: '10px',\n    bg: '#fff',\n    color: '#2aa275',\n    colors: 'primaryWithBg',\n    width: '222px',\n    maxWidth: '100%'\n  },\n  buttonFillStyle: {\n    type: 'button',\n    fontSize: '15px',\n    fontWeight: '700',\n    color: 'white',\n    borderRadius: '4px',\n    pl: '10px',\n    pr: '10px',\n    colors: 'primaryWithBg',\n    minWidth: ['160px', '190px'],\n    maxWidth: '100%',\n    height: '48px'\n  },\n  listContentStyle: {\n    fontSize: ['15px', '16px', '16px', '16px', '16px'],\n    color: '#6e7379',\n    mb: '0'\n  }\n};\nexport default PricingSection;","map":null,"metadata":{},"sourceType":"module"}